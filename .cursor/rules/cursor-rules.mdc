---
description: 
globs: 
alwaysApply: true
---
# 电影管理系统技术方案

## 技术栈
- **前端**: Vue3 + Axios + Less + Ant Design Vue + Day.js
- **后端**: Spring Boot + JPA + Mysql
- **包管理**: pnpm (前端) + Maven (后端)
- **构建工具**: Vite (前端)

## 角色权限
| 角色       | 可访问模块                                                                 |
|------------|--------------------------------------------------------------------------|
| 用户       | 注册登录、首页、电影预告、电影库、收藏/点赞/评分/评论、付费电影、榜单、智能推荐、留言 |
| 管理员     | 用户管理、电影管理、分类管理、订单管理、评论管理、留言管理、数据统计           |

## 功能模块规范

### 用户端模块
1. **注册登录**
   - 必填字段: 用户名、密码、性别、年龄、职业、电话
   - 密码需加密存储

2. **首页**
   - 包含: 轮播图(可后台配置)、高分榜(评分TOP5)、特价区、最新发布(按时间倒序)
   - 数据需缓存，每小时更新

3. **电影预告**
   - 按电影类别分级展示
   - 需支持分页加载

4. **电影库**
   - 筛选条件: 
     - 分类(多选)
     - 地区(单选)
     - 年份范围
     - 主演(模糊搜索)
     - 时长区间
     - 价格区间
   - 默认按热度排序

5. **互动功能**
   - 收藏: 支持用户创建多个收藏夹
   - 点赞/评分: 每人仅限1次
   - 评论: 敏感词过滤

6. **付费电影**
   - 支付成功后解锁观看权限24小时
   - 需记录播放历史

7. **榜单系统**
   - 评分榜: 按加权评分(评分人数≥100)
   - 播放榜: 按最近30天播放量
   - 展示字段: 封面图(16:9)、电影名、主演(前3)、地区、价格

8. **智能推荐**
   - 基于协同过滤算法
   - 允许用户手动筛选条件后触发推荐

### 管理端模块
1. **数据看板**
   - 实时显示: 注册用户数、电影总数
   - 统计图表:
     - 电影类型点赞分布(饼图)
     - 月度销售额(折线图)
     - 播放量TOP10(柱状图)
     - 职业-电影偏好(热力图)

2. **内容管理**
   - 电影管理:
     - 上传字段: 片名、简介、分类、地区、年份、主演、时长、封面(2:3)、价格
     - 付费电影需标红显示
   - 分类/地区管理: 树形结构

3. **运营管理**
   - 轮播图: 可排序，支持定时上下线
   - 订单: 按支付时间倒序
   - 评论: 支持按电影名/分类筛选
   - 留言: 需标记处理状态

## 开发规范
1. **代码修改原则**
   - 禁止修改未明确要求的功能
   - 修改前必须阅读关联模块代码
   - 所有接口需先检查现有实现

2. **前端规范**
   - 组件命名: `PascalCase`
   - 页面目录: `/views/[module]`
   - API调用: 必须使用封装后的axios实例
   - 样式: 禁止使用全局样式污染

3. **后端规范**
   - 实体类: 需加`@Entity`注解
   - 仓库接口: 继承`JpaRepository`
   - 事务管理: `@Transactional`注解
   - 接口路径: `/api/[version]/[resource]`
   - 权限： 不需要jwt验证，所有接口都有权限
   - api风格：REST
   - 接口路径不要带任何前缀

4. **数据安全**
   - 密码: BCrypt加密
   - 支付: 需验证用户会话
   - 敏感操作: 记录操作日志

## 接口约定
```typescript
// 示例接口规范
interface Movie {
  id: number
  title: string
  cover: string
  actors: string[]
  // ...其他字段
}

interface ApiResponse<T> {
  code: 200 | 400 | 500
  data: T
  message?: string
}